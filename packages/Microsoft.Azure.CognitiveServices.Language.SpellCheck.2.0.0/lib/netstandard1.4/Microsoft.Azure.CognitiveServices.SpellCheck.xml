<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.CognitiveServices.Language.SpellCheck</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ApiKeyServiceClientCredentials">
            <summary>
            Allows authentication to the API using a basic apiKey mechanism
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ApiKeyServiceClientCredentials.#ctor(System.String)">
            <summary>
            Creates a new instance of the ApiKeyServiceClientCredentails class
            </summary>
            <param name="subscriptionKey">The subscription key to authenticate and authorize as</param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ApiKeyServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Add the Basic Authentication Header to each outgoing request
            </summary>
            <param name="request">The outgoing request</param>
            <param name="cancellationToken">A token to cancel the operation</param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ISpellCheckAPI">
            <summary>
            The Spell Check API - V7 lets you check a text string for spelling and
            grammar errors.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ISpellCheckAPI.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ISpellCheckAPI.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ISpellCheckAPI.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ISpellCheckAPI.Credentials">
            <summary>
            Subscription credentials which uniquely identify client
            subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.ISpellCheckAPI.SpellCheckerWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The Bing Spell Check API lets you perform contextual grammar and
            spell checking. Bing has developed a web-based spell-checker that
            leverages machine learning and statistical machine translation to
            dynamically train a constantly evolving and highly contextual
            algorithm. The spell-checker is based on a massive corpus of web
            searches and documents.
            </summary>
            <param name='text'>
            The text string to check for spelling and grammar errors. The
            combined length of the text string, preContextText string, and
            postContextText string may not exceed 10,000 characters. You may
            specify this parameter in the query string of a GET request or in
            the body of a POST request. Because of the query string length
            limit, you'll typically use a POST request unless you're checking
            only short strings.
            </param>
            <param name='acceptLanguage'>
            A comma-delimited list of one or more languages to use for user
            interface strings. The list is in decreasing order of preference.
            For additional information, including expected format, see
            [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
            This header and the setLang query parameter are mutually exclusive;
            do not specify both. If you set this header, you must also specify
            the cc query parameter. Bing will use the first supported language
            it finds from the list, and combine that language with the cc
            parameter value to determine the market to return results for. If
            the list does not include a supported language, Bing will find the
            closest language and market that supports the request, and may use
            an aggregated or default market for the results instead of a
            specified one. You should use this header and the cc query
            parameter only if you specify multiple languages; otherwise, you
            should use the mkt and setLang query parameters. A user interface
            string is a string that's used as a label in a user interface.
            There are very few user interface strings in the JSON response
            objects. Any links in the response objects to Bing.com properties
            will apply the specified language.
            </param>
            <param name='pragma'>
            By default, Bing returns cached content, if available. To prevent
            Bing from returning cached content, set the Pragma header to
            no-cache (for example, Pragma: no-cache).
            </param>
            <param name='userAgent'>
            The user agent originating the request. Bing uses the user agent to
            provide mobile users with an optimized experience. Although
            optional, you are strongly encouraged to always specify this
            header. The user-agent should be the same string that any commonly
            used browser would send. For information about user agents, see
            [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
            </param>
            <param name='clientId'>
            Bing uses this header to provide users with consistent behavior
            across Bing API calls. Bing often flights new features and
            improvements, and it uses the client ID as a key for assigning
            traffic on different flights. If you do not use the same client ID
            for a user across multiple requests, then Bing may assign the user
            to multiple conflicting flights. Being assigned to multiple
            conflicting flights can lead to an inconsistent user experience.
            For example, if the second request has a different flight
            assignment than the first, the experience may be unexpected. Also,
            Bing can use the client ID to tailor web results to that client
            IDâ€™s search history, providing a richer experience for the user.
            Bing also uses this header to help improve result rankings by
            analyzing the activity generated by a client ID. The relevance
            improvements help with better quality of results delivered by Bing
            APIs and in turn enables higher click-through rates for the API
            consumer. IMPORTANT: Although optional, you should consider this
            header required. Persisting the client ID across multiple requests
            for the same end user and device combination enables 1) the API
            consumer to receive a consistent user experience, and 2) higher
            click-through rates via better quality of results from the Bing
            APIs. Each user that uses your application on the device must have
            a unique, Bing generated client ID. If you do not include this
            header in the request, Bing generates an ID and returns it in the
            X-MSEdge-ClientID response header. The only time that you should
            NOT include this header in a request is the first time the user
            uses your app on that device. Use the client ID for each Bing API
            request that your app makes for this user on the device. Persist
            the client ID. To persist the ID in a browser app, use a persistent
            HTTP cookie to ensure the ID is used across all sessions. Do not
            use a session cookie. For other apps such as mobile apps, use the
            device's persistent storage to persist the ID. The next time the
            user uses your app on that device, get the client ID that you
            persisted. Bing responses may or may not include this header. If
            the response includes this header, capture the client ID and use it
            for all subsequent Bing requests for the user on that device. If
            you include the X-MSEdge-ClientID, you must not include cookies in
            the request.
            </param>
            <param name='clientIp'>
            The IPv4 or IPv6 address of the client device. The IP address is
            used to discover the user's location. Bing uses the location
            information to determine safe search behavior. Although optional,
            you are encouraged to always specify this header and the
            X-Search-Location header. Do not obfuscate the address (for
            example, by changing the last octet to 0). Obfuscating the address
            results in the location not being anywhere near the device's actual
            location, which may result in Bing serving erroneous results.
            </param>
            <param name='location'>
            A semicolon-delimited list of key/value pairs that describe the
            client's geographical location. Bing uses the location information
            to determine safe search behavior and to return relevant local
            content. Specify the key/value pair as &lt;key&gt;:&lt;value&gt;.
            The following are the keys that you use to specify the user's
            location. lat (required): The latitude of the client's location, in
            degrees. The latitude must be greater than or equal to -90.0 and
            less than or equal to +90.0. Negative values indicate southern
            latitudes and positive values indicate northern latitudes. long
            (required): The longitude of the client's location, in degrees. The
            longitude must be greater than or equal to -180.0 and less than or
            equal to +180.0. Negative values indicate western longitudes and
            positive values indicate eastern longitudes. re (required): The
            radius, in meters, which specifies the horizontal accuracy of the
            coordinates. Pass the value returned by the device's location
            service. Typical values might be 22m for GPS/Wi-Fi, 380m for cell
            tower triangulation, and 18,000m for reverse IP lookup. ts
            (optional): The UTC UNIX timestamp of when the client was at the
            location. (The UNIX timestamp is the number of seconds since
            January 1, 1970.) head (optional): The client's relative heading or
            direction of travel. Specify the direction of travel as degrees
            from 0 through 360, counting clockwise relative to true north.
            Specify this key only if the sp key is nonzero. sp (optional): The
            horizontal velocity (speed), in meters per second, that the client
            device is traveling. alt (optional): The altitude of the client
            device, in meters. are (optional): The radius, in meters, that
            specifies the vertical accuracy of the coordinates. Specify this
            key only if you specify the alt key. Although many of the keys are
            optional, the more information that you provide, the more accurate
            the location results are. Although optional, you are encouraged to
            always specify the user's geographical location. Providing the
            location is especially important if the client's IP address does
            not accurately reflect the user's physical location (for example,
            if the client uses VPN). For optimal results, you should include
            this header and the  X-Search-ClientIP header, but at a minimum,
            you should include this header.
            </param>
            <param name='actionType'>
            A string that's used by logging to determine whether the request is
            coming from an interactive session or a page load. The following
            are the possible values. 1) Editâ€”The request is from an interactive
            session 2) Loadâ€”The request is from a page load. Possible values
            include: 'Edit', 'Load'
            </param>
            <param name='appName'>
            The unique name of your app. The name must be known by Bing. Do not
            include this parameter unless you have previously contacted Bing to
            get a unique app name. To get a unique name, contact your Bing
            Business Development manager.
            </param>
            <param name='countryCode'>
            A 2-character country code of the country where the results come
            from. This API supports only the United States market. If you
            specify this query parameter, it must be set to us. If you set this
            parameter, you must also specify the Accept-Language header. Bing
            uses the first supported language it finds from the languages list,
            and combine that language with the country code that you specify to
            determine the market to return results for. If the languages list
            does not include a supported language, Bing finds the closest
            language and market that supports the request, or it may use an
            aggregated or default market for the results instead of a specified
            one. You should use this query parameter and the Accept-Language
            query parameter only if you specify multiple languages; otherwise,
            you should use the mkt and setLang query parameters. This parameter
            and the mkt query parameter are mutually exclusiveâ€”do not specify
            both.
            </param>
            <param name='clientMachineName'>
            A unique name of the device that the request is being made from.
            Generate a unique value for each device (the value is unimportant).
            The service uses the ID to help debug issues and improve the
            quality of corrections.
            </param>
            <param name='docId'>
            A unique ID that identifies the document that the text belongs to.
            Generate a unique value for each document (the value is
            unimportant). The service uses the ID to help debug issues and
            improve the quality of corrections.
            </param>
            <param name='market'>
            The market where the results come from. You are strongly encouraged
            to always specify the market, if known. Specifying the market helps
            Bing route the request and return an appropriate and optimal
            response. This parameter and the cc query parameter are mutually
            exclusiveâ€”do not specify both.
            </param>
            <param name='sessionId'>
            A unique ID that identifies this user session. Generate a unique
            value for each user session (the value is unimportant). The service
            uses the ID to help debug issues and improve the quality of
            corrections
            </param>
            <param name='setLang'>
            The language to use for user interface strings. Specify the
            language using the ISO 639-1 2-letter language code. For example,
            the language code for English is EN. The default is EN (English).
            Although optional, you should always specify the language.
            Typically, you set setLang to the same language specified by mkt
            unless the user wants the user interface strings displayed in a
            different language. This parameter and the Accept-Language header
            are mutually exclusiveâ€”do not specify both. A user interface string
            is a string that's used as a label in a user interface. There are
            few user interface strings in the JSON response objects. Also, any
            links to Bing.com properties in the response objects apply the
            specified language.
            </param>
            <param name='userId'>
            A unique ID that identifies the user. Generate a unique value for
            each user (the value is unimportant). The service uses the ID to
            help debug issues and improve the quality of corrections.
            </param>
            <param name='mode'>
            The type of spelling and grammar checks to perform. The following
            are the possible values (the values are case insensitive). The
            default is Proof. 1) Proofâ€”Finds most spelling and grammar
            mistakes. 2) Spellâ€”Finds most spelling mistakes but does not find
            some of the grammar errors that Proof catches (for example,
            capitalization and repeated words). Possible values include:
            'proof', 'spell'
            </param>
            <param name='preContextText'>
            A string that gives context to the text string. For example, the
            text string petal is valid. However, if you set preContextText to
            bike, the context changes and the text string becomes not valid. In
            this case, the API suggests that you change petal to pedal (as in
            bike pedal). This text is not checked for grammar or spelling
            errors. The combined length of the text string, preContextText
            string, and postContextText string may not exceed 10,000
            characters. You may specify this parameter in the query string of a
            GET request or in the body of a POST request.
            </param>
            <param name='postContextText'>
            A string that gives context to the text string. For example, the
            text string read is valid. However, if you set postContextText to
            carpet, the context changes and the text string becomes not valid.
            In this case, the API suggests that you change read to red (as in
            red carpet). This text is not checked for grammar or spelling
            errors. The combined length of the text string, preContextText
            string, and postContextText string may not exceed 10,000
            characters. You may specify this parameter in the query string of a
            GET request or in the body of a POST request.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ActionType">
            <summary>
            Defines values for ActionType.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Answer.#ctor">
            <summary>
            Initializes a new instance of the Answer class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Answer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Answer class.
            </summary>
            <param name="id">A String identifier.</param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error">
            <summary>
            Defines the error that occurred.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.#ctor">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
            <param name="code">The error code that identifies the category of
            error. Possible values include: 'None', 'ServerError',
            'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',
            'InsufficientAuthorization'</param>
            <param name="message">A description of the error.</param>
            <param name="subCode">The error code that further helps to identify
            the error. Possible values include: 'UnexpectedError',
            'ResourceError', 'NotImplemented', 'ParameterMissing',
            'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
            'AuthorizationMissing', 'AuthorizationRedundancy',
            'AuthorizationDisabled', 'AuthorizationExpired'</param>
            <param name="moreDetails">A description that provides additional
            information about the error.</param>
            <param name="parameter">The parameter in the request that caused
            the error.</param>
            <param name="value">The parameter's value in the request that was
            not valid.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.Code">
            <summary>
            Gets or sets the error code that identifies the category of error.
            Possible values include: 'None', 'ServerError', 'InvalidRequest',
            'RateLimitExceeded', 'InvalidAuthorization',
            'InsufficientAuthorization'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.SubCode">
            <summary>
            Gets the error code that further helps to identify the error.
            Possible values include: 'UnexpectedError', 'ResourceError',
            'NotImplemented', 'ParameterMissing', 'ParameterInvalidValue',
            'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
            'AuthorizationRedundancy', 'AuthorizationDisabled',
            'AuthorizationExpired'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.Message">
            <summary>
            Gets or sets a description of the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.MoreDetails">
            <summary>
            Gets a description that provides additional information about the
            error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.Parameter">
            <summary>
            Gets the parameter in the request that caused the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.Value">
            <summary>
            Gets the parameter's value in the request that was not valid.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorCode">
            <summary>
            Defines values for ErrorCode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponse">
            <summary>
            The top-level response that represents a failed request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponse.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Error},System.String)">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
            <param name="errors">A list of errors that describe the reasons why
            the request failed.</param>
            <param name="id">A String identifier.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponse.Errors">
            <summary>
            Gets or sets a list of errors that describe the reasons why the
            request failed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponse.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponseException">
            <summary>
            Exception thrown for an invalid response with ErrorResponse
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponseException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponseException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponseException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponseException.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorSubCode">
            <summary>
            Defines values for ErrorSubCode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorType">
            <summary>
            Defines values for ErrorType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Identifiable">
            <summary>
            Defines the identity of a resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Identifiable.#ctor">
            <summary>
            Initializes a new instance of the Identifiable class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Identifiable.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Identifiable class.
            </summary>
            <param name="id">A String identifier.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Identifiable.Id">
            <summary>
            Gets a String identifier.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Response">
            <summary>
            Defines a response. All schemas that could be returned at the root of a
            response should inherit from this
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Response.#ctor">
            <summary>
            Initializes a new instance of the Response class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.Response.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Response class.
            </summary>
            <param name="id">A String identifier.</param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ResponseBase.#ctor">
            <summary>
            Initializes a new instance of the ResponseBase class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellCheckModel.#ctor">
            <summary>
            Initializes a new instance of the SpellCheckModel class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellCheckModel.#ctor(System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken},System.String)">
            <summary>
            Initializes a new instance of the SpellCheckModel class.
            </summary>
            <param name="id">A String identifier.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellCheckModel.FlaggedTokens">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellCheckModel.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken.#ctor">
            <summary>
            Initializes a new instance of the SpellingFlaggedToken class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken.#ctor(System.Int32,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingTokenSuggestion},System.String)">
            <summary>
            Initializes a new instance of the SpellingFlaggedToken class.
            </summary>
            <param name="type">Possible values include: 'UnknownToken',
            'RepeatedToken'</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken.Offset">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken.Token">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken.Type">
            <summary>
            Gets or sets possible values include: 'UnknownToken',
            'RepeatedToken'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken.Suggestions">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken.PingUrlSuffix">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingFlaggedToken.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingTokenSuggestion.#ctor">
            <summary>
            Initializes a new instance of the SpellingTokenSuggestion class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingTokenSuggestion.#ctor(System.String,System.Nullable{System.Double},System.String)">
            <summary>
            Initializes a new instance of the SpellingTokenSuggestion class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingTokenSuggestion.Suggestion">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingTokenSuggestion.Score">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingTokenSuggestion.PingUrlSuffix">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.SpellingTokenSuggestion.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI">
            <summary>
            The Spell Check API - V7 lets you check a text string for spelling and
            grammar errors.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.Credentials">
            <summary>
            Subscription credentials which uniquely identify client subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SpellCheckAPI class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SpellCheckAPI class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SpellCheckAPI class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SpellCheckAPI class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SpellCheckAPI class.
            </summary>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SpellCheckAPI class.
            </summary>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SpellCheckAPI class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SpellCheckAPI class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPI.SpellCheckerWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The Bing Spell Check API lets you perform contextual grammar and spell
            checking. Bing has developed a web-based spell-checker that leverages
            machine learning and statistical machine translation to dynamically train a
            constantly evolving and highly contextual algorithm. The spell-checker is
            based on a massive corpus of web searches and documents.
            </summary>
            <param name='text'>
            The text string to check for spelling and grammar errors. The combined
            length of the text string, preContextText string, and postContextText
            string may not exceed 10,000 characters. You may specify this parameter in
            the query string of a GET request or in the body of a POST request. Because
            of the query string length limit, you'll typically use a POST request
            unless you're checking only short strings.
            </param>
            <param name='acceptLanguage'>
            A comma-delimited list of one or more languages to use for user interface
            strings. The list is in decreasing order of preference. For additional
            information, including expected format, see
            [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
            header and the setLang query parameter are mutually exclusive; do not
            specify both. If you set this header, you must also specify the cc query
            parameter. Bing will use the first supported language it finds from the
            list, and combine that language with the cc parameter value to determine
            the market to return results for. If the list does not include a supported
            language, Bing will find the closest language and market that supports the
            request, and may use an aggregated or default market for the results
            instead of a specified one. You should use this header and the cc query
            parameter only if you specify multiple languages; otherwise, you should use
            the mkt and setLang query parameters. A user interface string is a string
            that's used as a label in a user interface. There are very few user
            interface strings in the JSON response objects. Any links in the response
            objects to Bing.com properties will apply the specified language.
            </param>
            <param name='pragma'>
            By default, Bing returns cached content, if available. To prevent Bing from
            returning cached content, set the Pragma header to no-cache (for example,
            Pragma: no-cache).
            </param>
            <param name='userAgent'>
            The user agent originating the request. Bing uses the user agent to provide
            mobile users with an optimized experience. Although optional, you are
            strongly encouraged to always specify this header. The user-agent should be
            the same string that any commonly used browser would send. For information
            about user agents, see [RFC
            2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
            </param>
            <param name='clientId'>
            Bing uses this header to provide users with consistent behavior across Bing
            API calls. Bing often flights new features and improvements, and it uses
            the client ID as a key for assigning traffic on different flights. If you
            do not use the same client ID for a user across multiple requests, then
            Bing may assign the user to multiple conflicting flights. Being assigned to
            multiple conflicting flights can lead to an inconsistent user experience.
            For example, if the second request has a different flight assignment than
            the first, the experience may be unexpected. Also, Bing can use the client
            ID to tailor web results to that client IDâ€™s search history, providing a
            richer experience for the user. Bing also uses this header to help improve
            result rankings by analyzing the activity generated by a client ID. The
            relevance improvements help with better quality of results delivered by
            Bing APIs and in turn enables higher click-through rates for the API
            consumer. IMPORTANT: Although optional, you should consider this header
            required. Persisting the client ID across multiple requests for the same
            end user and device combination enables 1) the API consumer to receive a
            consistent user experience, and 2) higher click-through rates via better
            quality of results from the Bing APIs. Each user that uses your application
            on the device must have a unique, Bing generated client ID. If you do not
            include this header in the request, Bing generates an ID and returns it in
            the X-MSEdge-ClientID response header. The only time that you should NOT
            include this header in a request is the first time the user uses your app
            on that device. Use the client ID for each Bing API request that your app
            makes for this user on the device. Persist the client ID. To persist the ID
            in a browser app, use a persistent HTTP cookie to ensure the ID is used
            across all sessions. Do not use a session cookie. For other apps such as
            mobile apps, use the device's persistent storage to persist the ID. The
            next time the user uses your app on that device, get the client ID that you
            persisted. Bing responses may or may not include this header. If the
            response includes this header, capture the client ID and use it for all
            subsequent Bing requests for the user on that device. If you include the
            X-MSEdge-ClientID, you must not include cookies in the request.
            </param>
            <param name='clientIp'>
            The IPv4 or IPv6 address of the client device. The IP address is used to
            discover the user's location. Bing uses the location information to
            determine safe search behavior. Although optional, you are encouraged to
            always specify this header and the X-Search-Location header. Do not
            obfuscate the address (for example, by changing the last octet to 0).
            Obfuscating the address results in the location not being anywhere near the
            device's actual location, which may result in Bing serving erroneous
            results.
            </param>
            <param name='location'>
            A semicolon-delimited list of key/value pairs that describe the client's
            geographical location. Bing uses the location information to determine safe
            search behavior and to return relevant local content. Specify the key/value
            pair as &lt;key&gt;:&lt;value&gt;. The following are the keys that you use
            to specify the user's location. lat (required): The latitude of the
            client's location, in degrees. The latitude must be greater than or equal
            to -90.0 and less than or equal to +90.0. Negative values indicate southern
            latitudes and positive values indicate northern latitudes. long (required):
            The longitude of the client's location, in degrees. The longitude must be
            greater than or equal to -180.0 and less than or equal to +180.0. Negative
            values indicate western longitudes and positive values indicate eastern
            longitudes. re (required): The radius, in meters, which specifies the
            horizontal accuracy of the coordinates. Pass the value returned by the
            device's location service. Typical values might be 22m for GPS/Wi-Fi, 380m
            for cell tower triangulation, and 18,000m for reverse IP lookup. ts
            (optional): The UTC UNIX timestamp of when the client was at the location.
            (The UNIX timestamp is the number of seconds since January 1, 1970.) head
            (optional): The client's relative heading or direction of travel. Specify
            the direction of travel as degrees from 0 through 360, counting clockwise
            relative to true north. Specify this key only if the sp key is nonzero. sp
            (optional): The horizontal velocity (speed), in meters per second, that the
            client device is traveling. alt (optional): The altitude of the client
            device, in meters. are (optional): The radius, in meters, that specifies
            the vertical accuracy of the coordinates. Specify this key only if you
            specify the alt key. Although many of the keys are optional, the more
            information that you provide, the more accurate the location results are.
            Although optional, you are encouraged to always specify the user's
            geographical location. Providing the location is especially important if
            the client's IP address does not accurately reflect the user's physical
            location (for example, if the client uses VPN). For optimal results, you
            should include this header and the  X-Search-ClientIP header, but at a
            minimum, you should include this header.
            </param>
            <param name='actionType'>
            A string that's used by logging to determine whether the request is coming
            from an interactive session or a page load. The following are the possible
            values. 1) Editâ€”The request is from an interactive session 2) Loadâ€”The
            request is from a page load. Possible values include: 'Edit', 'Load'
            </param>
            <param name='appName'>
            The unique name of your app. The name must be known by Bing. Do not include
            this parameter unless you have previously contacted Bing to get a unique
            app name. To get a unique name, contact your Bing Business Development
            manager.
            </param>
            <param name='countryCode'>
            A 2-character country code of the country where the results come from. This
            API supports only the United States market. If you specify this query
            parameter, it must be set to us. If you set this parameter, you must also
            specify the Accept-Language header. Bing uses the first supported language
            it finds from the languages list, and combine that language with the
            country code that you specify to determine the market to return results
            for. If the languages list does not include a supported language, Bing
            finds the closest language and market that supports the request, or it may
            use an aggregated or default market for the results instead of a specified
            one. You should use this query parameter and the Accept-Language query
            parameter only if you specify multiple languages; otherwise, you should use
            the mkt and setLang query parameters. This parameter and the mkt query
            parameter are mutually exclusiveâ€”do not specify both.
            </param>
            <param name='clientMachineName'>
            A unique name of the device that the request is being made from. Generate a
            unique value for each device (the value is unimportant). The service uses
            the ID to help debug issues and improve the quality of corrections.
            </param>
            <param name='docId'>
            A unique ID that identifies the document that the text belongs to. Generate
            a unique value for each document (the value is unimportant). The service
            uses the ID to help debug issues and improve the quality of corrections.
            </param>
            <param name='market'>
            The market where the results come from. You are strongly encouraged to
            always specify the market, if known. Specifying the market helps Bing route
            the request and return an appropriate and optimal response. This parameter
            and the cc query parameter are mutually exclusiveâ€”do not specify both.
            </param>
            <param name='sessionId'>
            A unique ID that identifies this user session. Generate a unique value for
            each user session (the value is unimportant). The service uses the ID to
            help debug issues and improve the quality of corrections
            </param>
            <param name='setLang'>
            The language to use for user interface strings. Specify the language using
            the ISO 639-1 2-letter language code. For example, the language code for
            English is EN. The default is EN (English). Although optional, you should
            always specify the language. Typically, you set setLang to the same
            language specified by mkt unless the user wants the user interface strings
            displayed in a different language. This parameter and the Accept-Language
            header are mutually exclusiveâ€”do not specify both. A user interface string
            is a string that's used as a label in a user interface. There are few user
            interface strings in the JSON response objects. Also, any links to Bing.com
            properties in the response objects apply the specified language.
            </param>
            <param name='userId'>
            A unique ID that identifies the user. Generate a unique value for each user
            (the value is unimportant). The service uses the ID to help debug issues
            and improve the quality of corrections.
            </param>
            <param name='mode'>
            The type of spelling and grammar checks to perform. The following are the
            possible values (the values are case insensitive). The default is Proof. 1)
            Proofâ€”Finds most spelling and grammar mistakes. 2) Spellâ€”Finds most
            spelling mistakes but does not find some of the grammar errors that Proof
            catches (for example, capitalization and repeated words). Possible values
            include: 'proof', 'spell'
            </param>
            <param name='preContextText'>
            A string that gives context to the text string. For example, the text
            string petal is valid. However, if you set preContextText to bike, the
            context changes and the text string becomes not valid. In this case, the
            API suggests that you change petal to pedal (as in bike pedal). This text
            is not checked for grammar or spelling errors. The combined length of the
            text string, preContextText string, and postContextText string may not
            exceed 10,000 characters. You may specify this parameter in the query
            string of a GET request or in the body of a POST request.
            </param>
            <param name='postContextText'>
            A string that gives context to the text string. For example, the text
            string read is valid. However, if you set postContextText to carpet, the
            context changes and the text string becomes not valid. In this case, the
            API suggests that you change read to red (as in red carpet). This text is
            not checked for grammar or spelling errors. The combined length of the text
            string, preContextText string, and postContextText string may not exceed
            10,000 characters. You may specify this parameter in the query string of a
            GET request or in the body of a POST request.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPIExtensions">
            <summary>
            Extension methods for SpellCheckAPI.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Language.SpellCheck.SpellCheckAPIExtensions.SpellCheckerAsync(Microsoft.Azure.CognitiveServices.Language.SpellCheck.ISpellCheckAPI,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            The Bing Spell Check API lets you perform contextual grammar and spell
            checking. Bing has developed a web-based spell-checker that leverages
            machine learning and statistical machine translation to dynamically train a
            constantly evolving and highly contextual algorithm. The spell-checker is
            based on a massive corpus of web searches and documents.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='text'>
            The text string to check for spelling and grammar errors. The combined
            length of the text string, preContextText string, and postContextText
            string may not exceed 10,000 characters. You may specify this parameter in
            the query string of a GET request or in the body of a POST request. Because
            of the query string length limit, you'll typically use a POST request
            unless you're checking only short strings.
            </param>
            <param name='acceptLanguage'>
            A comma-delimited list of one or more languages to use for user interface
            strings. The list is in decreasing order of preference. For additional
            information, including expected format, see
            [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
            header and the setLang query parameter are mutually exclusive; do not
            specify both. If you set this header, you must also specify the cc query
            parameter. Bing will use the first supported language it finds from the
            list, and combine that language with the cc parameter value to determine
            the market to return results for. If the list does not include a supported
            language, Bing will find the closest language and market that supports the
            request, and may use an aggregated or default market for the results
            instead of a specified one. You should use this header and the cc query
            parameter only if you specify multiple languages; otherwise, you should use
            the mkt and setLang query parameters. A user interface string is a string
            that's used as a label in a user interface. There are very few user
            interface strings in the JSON response objects. Any links in the response
            objects to Bing.com properties will apply the specified language.
            </param>
            <param name='pragma'>
            By default, Bing returns cached content, if available. To prevent Bing from
            returning cached content, set the Pragma header to no-cache (for example,
            Pragma: no-cache).
            </param>
            <param name='userAgent'>
            The user agent originating the request. Bing uses the user agent to provide
            mobile users with an optimized experience. Although optional, you are
            strongly encouraged to always specify this header. The user-agent should be
            the same string that any commonly used browser would send. For information
            about user agents, see [RFC
            2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
            </param>
            <param name='clientId'>
            Bing uses this header to provide users with consistent behavior across Bing
            API calls. Bing often flights new features and improvements, and it uses
            the client ID as a key for assigning traffic on different flights. If you
            do not use the same client ID for a user across multiple requests, then
            Bing may assign the user to multiple conflicting flights. Being assigned to
            multiple conflicting flights can lead to an inconsistent user experience.
            For example, if the second request has a different flight assignment than
            the first, the experience may be unexpected. Also, Bing can use the client
            ID to tailor web results to that client IDâ€™s search history, providing a
            richer experience for the user. Bing also uses this header to help improve
            result rankings by analyzing the activity generated by a client ID. The
            relevance improvements help with better quality of results delivered by
            Bing APIs and in turn enables higher click-through rates for the API
            consumer. IMPORTANT: Although optional, you should consider this header
            required. Persisting the client ID across multiple requests for the same
            end user and device combination enables 1) the API consumer to receive a
            consistent user experience, and 2) higher click-through rates via better
            quality of results from the Bing APIs. Each user that uses your application
            on the device must have a unique, Bing generated client ID. If you do not
            include this header in the request, Bing generates an ID and returns it in
            the X-MSEdge-ClientID response header. The only time that you should NOT
            include this header in a request is the first time the user uses your app
            on that device. Use the client ID for each Bing API request that your app
            makes for this user on the device. Persist the client ID. To persist the ID
            in a browser app, use a persistent HTTP cookie to ensure the ID is used
            across all sessions. Do not use a session cookie. For other apps such as
            mobile apps, use the device's persistent storage to persist the ID. The
            next time the user uses your app on that device, get the client ID that you
            persisted. Bing responses may or may not include this header. If the
            response includes this header, capture the client ID and use it for all
            subsequent Bing requests for the user on that device. If you include the
            X-MSEdge-ClientID, you must not include cookies in the request.
            </param>
            <param name='clientIp'>
            The IPv4 or IPv6 address of the client device. The IP address is used to
            discover the user's location. Bing uses the location information to
            determine safe search behavior. Although optional, you are encouraged to
            always specify this header and the X-Search-Location header. Do not
            obfuscate the address (for example, by changing the last octet to 0).
            Obfuscating the address results in the location not being anywhere near the
            device's actual location, which may result in Bing serving erroneous
            results.
            </param>
            <param name='location'>
            A semicolon-delimited list of key/value pairs that describe the client's
            geographical location. Bing uses the location information to determine safe
            search behavior and to return relevant local content. Specify the key/value
            pair as &lt;key&gt;:&lt;value&gt;. The following are the keys that you use
            to specify the user's location. lat (required): The latitude of the
            client's location, in degrees. The latitude must be greater than or equal
            to -90.0 and less than or equal to +90.0. Negative values indicate southern
            latitudes and positive values indicate northern latitudes. long (required):
            The longitude of the client's location, in degrees. The longitude must be
            greater than or equal to -180.0 and less than or equal to +180.0. Negative
            values indicate western longitudes and positive values indicate eastern
            longitudes. re (required): The radius, in meters, which specifies the
            horizontal accuracy of the coordinates. Pass the value returned by the
            device's location service. Typical values might be 22m for GPS/Wi-Fi, 380m
            for cell tower triangulation, and 18,000m for reverse IP lookup. ts
            (optional): The UTC UNIX timestamp of when the client was at the location.
            (The UNIX timestamp is the number of seconds since January 1, 1970.) head
            (optional): The client's relative heading or direction of travel. Specify
            the direction of travel as degrees from 0 through 360, counting clockwise
            relative to true north. Specify this key only if the sp key is nonzero. sp
            (optional): The horizontal velocity (speed), in meters per second, that the
            client device is traveling. alt (optional): The altitude of the client
            device, in meters. are (optional): The radius, in meters, that specifies
            the vertical accuracy of the coordinates. Specify this key only if you
            specify the alt key. Although many of the keys are optional, the more
            information that you provide, the more accurate the location results are.
            Although optional, you are encouraged to always specify the user's
            geographical location. Providing the location is especially important if
            the client's IP address does not accurately reflect the user's physical
            location (for example, if the client uses VPN). For optimal results, you
            should include this header and the  X-Search-ClientIP header, but at a
            minimum, you should include this header.
            </param>
            <param name='actionType'>
            A string that's used by logging to determine whether the request is coming
            from an interactive session or a page load. The following are the possible
            values. 1) Editâ€”The request is from an interactive session 2) Loadâ€”The
            request is from a page load. Possible values include: 'Edit', 'Load'
            </param>
            <param name='appName'>
            The unique name of your app. The name must be known by Bing. Do not include
            this parameter unless you have previously contacted Bing to get a unique
            app name. To get a unique name, contact your Bing Business Development
            manager.
            </param>
            <param name='countryCode'>
            A 2-character country code of the country where the results come from. This
            API supports only the United States market. If you specify this query
            parameter, it must be set to us. If you set this parameter, you must also
            specify the Accept-Language header. Bing uses the first supported language
            it finds from the languages list, and combine that language with the
            country code that you specify to determine the market to return results
            for. If the languages list does not include a supported language, Bing
            finds the closest language and market that supports the request, or it may
            use an aggregated or default market for the results instead of a specified
            one. You should use this query parameter and the Accept-Language query
            parameter only if you specify multiple languages; otherwise, you should use
            the mkt and setLang query parameters. This parameter and the mkt query
            parameter are mutually exclusiveâ€”do not specify both.
            </param>
            <param name='clientMachineName'>
            A unique name of the device that the request is being made from. Generate a
            unique value for each device (the value is unimportant). The service uses
            the ID to help debug issues and improve the quality of corrections.
            </param>
            <param name='docId'>
            A unique ID that identifies the document that the text belongs to. Generate
            a unique value for each document (the value is unimportant). The service
            uses the ID to help debug issues and improve the quality of corrections.
            </param>
            <param name='market'>
            The market where the results come from. You are strongly encouraged to
            always specify the market, if known. Specifying the market helps Bing route
            the request and return an appropriate and optimal response. This parameter
            and the cc query parameter are mutually exclusiveâ€”do not specify both.
            </param>
            <param name='sessionId'>
            A unique ID that identifies this user session. Generate a unique value for
            each user session (the value is unimportant). The service uses the ID to
            help debug issues and improve the quality of corrections
            </param>
            <param name='setLang'>
            The language to use for user interface strings. Specify the language using
            the ISO 639-1 2-letter language code. For example, the language code for
            English is EN. The default is EN (English). Although optional, you should
            always specify the language. Typically, you set setLang to the same
            language specified by mkt unless the user wants the user interface strings
            displayed in a different language. This parameter and the Accept-Language
            header are mutually exclusiveâ€”do not specify both. A user interface string
            is a string that's used as a label in a user interface. There are few user
            interface strings in the JSON response objects. Also, any links to Bing.com
            properties in the response objects apply the specified language.
            </param>
            <param name='userId'>
            A unique ID that identifies the user. Generate a unique value for each user
            (the value is unimportant). The service uses the ID to help debug issues
            and improve the quality of corrections.
            </param>
            <param name='mode'>
            The type of spelling and grammar checks to perform. The following are the
            possible values (the values are case insensitive). The default is Proof. 1)
            Proofâ€”Finds most spelling and grammar mistakes. 2) Spellâ€”Finds most
            spelling mistakes but does not find some of the grammar errors that Proof
            catches (for example, capitalization and repeated words). Possible values
            include: 'proof', 'spell'
            </param>
            <param name='preContextText'>
            A string that gives context to the text string. For example, the text
            string petal is valid. However, if you set preContextText to bike, the
            context changes and the text string becomes not valid. In this case, the
            API suggests that you change petal to pedal (as in bike pedal). This text
            is not checked for grammar or spelling errors. The combined length of the
            text string, preContextText string, and postContextText string may not
            exceed 10,000 characters. You may specify this parameter in the query
            string of a GET request or in the body of a POST request.
            </param>
            <param name='postContextText'>
            A string that gives context to the text string. For example, the text
            string read is valid. However, if you set postContextText to carpet, the
            context changes and the text string becomes not valid. In this case, the
            API suggests that you change read to red (as in red carpet). This text is
            not checked for grammar or spelling errors. The combined length of the text
            string, preContextText string, and postContextText string may not exceed
            10,000 characters. You may specify this parameter in the query string of a
            GET request or in the body of a POST request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>
